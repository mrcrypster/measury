<?php

# Index metrics for users

require_once __DIR__ . '/../lib.php';

while ( true ) {
  $res = redis('PING', function($num, $lines) {
    return $num == '+PONG';
  });
  
  if ( !$res ) {
    sleep(1);
    continue;
  }
  
  foreach ( mysqly::fetch('SELECT * FROM rules WHERE is_enabled = 1') as $r ) {
    
    $period = $r['period'] . ' ' . $r['period_type'];
    $bucket = strtotime(date('Y-m-d H:i:s', 0) . ' +' . $period);
    $metric = $r['query'];
    
    $val = metrics::window_val($metric, $r['user_id'], ['period' => $period]);

    switch ( $r['operation'] ) {
      case 'less': $bad = $val < $r['value']; break;
      case 'more': $bad = $val < $r['value']; break;
      case 'equal': $bad = $val == $r['value']; break;
    }
    
    $alert = [ 'rule_id' => $r['id'], 'metric' => $metric ];
    
    if ( $bad ) {
      if ( !mysqly::fetch('alerts', $alert) ) {
        echo 'Measury Alert -> ' . $metric . ': ' . $val . "\n";
        
        $m = mysqly::metrics_(['metric' => $metric, 'user_id' => $r['user_id']]);
        
        $body = 'Aloha!' . "\n\n".
                $r['aggregation'] . '(' . $metric . ') ' . ' for ' .
                $r['period'] . ' ' . $r['period_type'] . ' is ' .
                $r['operation'] . ' than ' . $r['value'] . "\n\n" .
                'Open metric: ' .
                'https://measury.io/m?m=' . $metric . '&f=' . $m['folder_id'] . "\n\n" .
                'Your Measury service';
                
        email(mysqly::users_email($r['user_id']), 'Measury alert for: ' . $metric, $body);
        mysqly::insert('alerts', $alert);
      }
    }
    else {
      if ( mysqly::fetch('alerts', $alert) ) {
        mysqly::remove('alerts', $alert);
      }
    }
  }
  
  sleep(1);
}