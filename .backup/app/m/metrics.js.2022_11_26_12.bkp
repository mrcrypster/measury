// Drag and Drop

on('#metrics-list li', 'dragstart', function(e) {
  this.classList.add('dragging');
  e.dataTransfer.setData('metric', this.querySelector('a').dataset.metric);
});

on('#metrics-list li', 'dragend', function() {
  this.classList.remove('dragging');
});

on('#metrics-list li.on a', 'click', function(e) {
  qs('#metrics-list')[0].classList.add('on');
  e.stopPropagation();
  e.preventDefault();
});

on('#folders > a', 'dragover', function(e) {
  e.preventDefault();
  this.classList.add('dragover');
});

on('#folders > a', 'dragleave', function() {
  this.classList.remove('dragover');
});

on('#folders > a', 'drop', function(e) {
  this.classList.remove('dragover');
  let m = e.dataTransfer.getData('metric');
  
  if ( m ) {
    phpy('/m/move', {metric: m, folder: this.dataset.id})
    qs('#metrics-list li a[data-metric="' + m + '"]', function(el) {
      el.parentNode.remove();
    })
  }
});



function metric(m) {
  qs('#metrics-list li.on').forEach(function(el) {
    el.classList.remove('on');
  });
  
  qs('#metrics-list li a[data-metric="' + m + '"]').forEach(function(el) {
    el.parentNode.classList.add('on');
  });
  
  phpy('/m/metric?m=' + m)
}



sub('metric', function() {
  setTimeout(function() {
    qs('.chrt').forEach(function(el) {
      let data = JSON.parse(el.dataset.data);
      let color = el.dataset.color || '#0074D9';
      
      
      new Chart(el, {
        type: 'line',
        data: {
          labels: Object.keys(data),
          datasets: [{
            label: 'Value',
            borderColor: color + 'aa',
            backgroundColor: color + '22',
            fill: {target: 'origin'},
            data: Object.values(data),
            borderWidth: 2
          }]
        },
        options: {
          aspectRatio: 3,
          animation: {duration: 0},
          
          scales: {
            y: {
              beginAtZero: false,
              grid: {
                display: true,
                drawTicks: true,
                color: '#333'
              }
            },
            x: {
              ticks: { display: false },
              grid: {
                display: true,
                drawTicks: true,
                color: '#333'
              }
            }
          },
          plugins: {
            legend: { display: false }
          }
        }
      });
    });
  }, 100);
});